version: '3'

services:
  app:
    build:
      context: . # Use an image built from the specified dockerfile in the current directory.
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: on-failure
    depends_on: 
      - redis
      - db
    links:
      - db
    networks:
      - backend

  nginx:
    image: nginx
    hostname: localhost
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./nginx:/etc/nginx:ro
      - ./letsencrypt/conf:/etc/letsencrypt
      - ./letsencrypt/html:/tmp/letsencrypt
    environment:
      - LE_RENEW_HOOK=docker kill -s HUP @CONTAINER_NAME@
    depends_on: 
      - app
    networks:
      - backend

  letsencrypt:
    restart: always
    image: kvaps/letsencrypt-webroot
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt/conf:/etc/letsencrypt
      - ./letsencrypt/html:/tmp/letsencrypt
    links:
      - nginx
    environment:
      - DOMAINS=triple-t.cc www.triple-t.cc
      - EMAIL=intouch.opec@gmail.com
      - WEBROOT_PATH=/tmp/letsencrypt
      - EXP_LIMIT=30
      - CHECK_FREQ=30
      - CHICKENEGG=
      - STAGING=
  # adminer:
  #   image: adminer
  #   restart: always
  #   ports:
  #     - 8080:8080

  db:
    image: postgres:11.3
    container_name: db
    hostname: db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=todos
    networks:
      - backend

  redis:
    image: redis
    restart: always
    container_name: cache
    hostname: cache
    ports:
      - 6379:6379
    networks:
      - backend

networks:
  backend:
    driver: bridge 
